<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:showcase="http://liferay.com/faces/showcase" template="/WEB-INF/templates/component-2col.xhtml">

	<ui:define name="col1">
		<!-- Example 1: ValueChangeListener execution when immediate is true -->
		<h:form>
			<showcase:example description="#{i18n['valuechangelistener-execution-when-immediate-is-true']}" number="1">
				<h:outputLabel value="#{i18n['agree']}" />
				<h:messages globalOnly="true" styleClass="feedback" />
				<h:selectBooleanCheckbox id="checkbox" immediate="true" value="#{selectBooleanCheckboxModelBean.agree}"
					valueChangeListener="#{selectBooleanCheckboxBackingBean.valueChangeListener}">
				</h:selectBooleanCheckbox>
				<hr />
				<h:commandButton value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}">
				<h:outputText id="modelValue" value="#{selectBooleanCheckboxModelBean.agree}" />
			</showcase:results>
		</h:form>
	</ui:define>

	<ui:define name="col2">
		<!-- Example 2: ValueChangeListener execution when immediate is false (the default) -->
		<h:form>
			<showcase:example description="#{i18n['valuechangelistener-execution-when-immediate-is-false']}" number="2">
				<h:outputLabel value="#{i18n['agree']}" />
				<h:messages globalOnly="true" styleClass="feedback" />
				<h:selectBooleanCheckbox id="checkbox" value="#{selectBooleanCheckboxModelBean.agree}"
					valueChangeListener="#{selectBooleanCheckboxBackingBean.valueChangeListener}">
				</h:selectBooleanCheckbox>
				<hr />
				<h:commandButton value="#{i18n['submit']}">
					<f:ajax execute="@form" render="@form" />
				</h:commandButton>
			</showcase:example>
			<showcase:results label="#{i18n['model-value']}">
				<h:outputText id="modelValue" value="#{selectBooleanCheckboxModelBean.agree}" />
			</showcase:results>
		</h:form>
	</ui:define>

</ui:composition>
