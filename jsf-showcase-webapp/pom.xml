<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.liferay.faces.demo</groupId>
		<artifactId>com.liferay.faces.demo.showcase.parent</artifactId>
		<version>4.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<artifactId>com.liferay.faces.demo.jsf.showcase.webapp</artifactId>
	<packaging>war</packaging>
	<name>JSF Showcase Webapp</name>
	<description>This plugin is the JSF Showcase demo webapp.</description>

	<profiles>
		<profile>
			<id>prettyfaces</id>
			<dependencies>
				<dependency>
					<groupId>com.ocpsoft</groupId>
					<artifactId>prettyfaces-jsf2</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>selenium</id>
			<build>
				<plugins>
					<!-- Ensure that the png resource is in the temporary directory for testing. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="src/test/resources/liferay-jsf-jersey.png" todir="${java.io.tmpdir}" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.19.1</version>
						<executions>
							<execution>
								<id>selenium-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<systemPropertyVariables>
										<RUNNING_WITH_MAVEN>true</RUNNING_WITH_MAVEN>
										<!-- Specify a property like so: -Dintegration.browser=phantomjs -->
										<integration.browser>${integration.browser}</integration.browser>
										<integration.browser.wait.time.out>${integration.browser.wait.time.out}</integration.browser.wait.time.out>
										<integration.log.level>${integration.log.level}</integration.log.level>
										<integration.container>tomcat</integration.container>
										<integration.host>${integration.host}</integration.host>
										<integration.port>${integration.port}</integration.port>
										<integration.showcase.context>/com.liferay.faces.demo.jsf.showcase.webapp/web/guest/showcase/-/component</integration.showcase.context>
										<integration.default.component.prefix>h</integration.default.component.prefix>
										<integration.sign.in.context>${integration.sign.in.context}</integration.sign.in.context>
										<integration.login.xpath>${integration.login.xpath}</integration.login.xpath>
										<integration.password.xpath>${integration.password.xpath}</integration.password.xpath>
										<integration.sign.in.button.xpath>${integration.sign.in.button.xpath}</integration.sign.in.button.xpath>
										<integration.login>${integration.login}</integration.login>
										<integration.password>${integration.password}</integration.password>
									</systemPropertyVariables>
									<properties>
										<property>
											<name>listener</name>
											<value>com.liferay.faces.test.selenium.IntegrationTestSuiteListener</value>
										</property>
									</properties>
									<includes>
										<include>**/*Test.java,**/Test*.java,**/*TestCase.java,**/*Tester.java</include>
									</includes>
									<trimStackTrace>false</trimStackTrace>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>liferay</id>
			<properties>
				<integration.container>liferay</integration.container>
			</properties>
		</profile>
		<profile>
			<id>pluto</id>
			<properties>
				<integration.container>pluto</integration.container>
			</properties>
		</profile>
		<profile>
			<id>phantomjs</id>
			<properties>
				<integration.browser>phantomjs</integration.browser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.codeborne</groupId>
					<artifactId>phantomjsdriver</artifactId>
					<version>1.3.0</version>
					<scope>test</scope>
					<!-- Don't download the version of selenium that phantomjsdriver depends on since it is older than the
					version we specify. -->
					<exclusions>
						<exclusion>
							<artifactId>org.seleniumhq.selenium</artifactId>
							<groupId>selenium-java</groupId>
						</exclusion>
						<exclusion>
							<artifactId>org.seleniumhq.selenium</artifactId>
							<groupId>selenium-server</groupId>
						</exclusion>
						<exclusion>
							<artifactId>org.seleniumhq.selenium</artifactId>
							<groupId>selenium-remote-driver</groupId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>firefox</id>
			<properties>
				<integration.browser>firefox</integration.browser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-firefox-driver</artifactId>
					<version>2.53.0</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>chrome</id>
			<properties>
				<integration.browser>chrome</integration.browser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<version>2.53.0</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>chromium</id>
			<properties>
				<integration.browser>chromium</integration.browser>
			</properties>
			<dependencies>
<dependency>
         <groupId>org.seleniumhq.selenium</groupId>
         <artifactId>selenium-api</artifactId>
         <version>2.53.1</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>org.seleniumhq.selenium</groupId>
         <artifactId>selenium-java</artifactId>
         <version>2.53.1</version>
      </dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<version>2.53.1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>htmlunit</id>
			<properties>
				<integration.browser>htmlunit</integration.browser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>htmlunit-driver</artifactId>
					<version>2.23.2</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<version>1.4.01</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.eclipse.jetty.websocket</groupId>
					<artifactId>websocket-client</artifactId>
					<version>9.2.18.v20160721</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
					<version>4.5.2</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>jbrowser</id>
			<properties>
				<integration.browser>jbrowser</integration.browser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.machinepublishers</groupId>
					<artifactId>jbrowserdriver</artifactId>
					<version>0.17.3</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<!-- ensure that the png resource is in the temporary directory for testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>test</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<copy file="src/main/webapp/WEB-INF/component/h/body/general/webappBody.xhtml" todir="${project.build.testOutputDirectory}" />
								<copy file="src/main/webapp/WEB-INF/component/h/body/general/portletBody.xhtml" todir="${project.build.testOutputDirectory}" />
								<copy file="src/main/webapp/WEB-INF/component/h/head/general/webappHead.xhtml" todir="${project.build.testOutputDirectory}" />
								<copy file="src/main/webapp/WEB-INF/component/h/head/general/portletHead.xhtml" todir="${project.build.testOutputDirectory}" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.java</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
	</build>

	<dependencies>

		<!-- Integration test dependencies. -->
		<dependency>
			<groupId>com.liferay.faces.test</groupId>
			<artifactId>com.liferay.faces.test.selenium</artifactId>
			<version>0.2.0-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<!-- End integration test dependencies. -->

		<!-- BEGIN: Only required for file upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<!-- END: Only required for file upload -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>javax.faces-api</artifactId>
			<version>${faces.api.version}</version>
			<scope>${faces.api.scope}</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.liferay.faces.demo</groupId>
			<artifactId>com.liferay.faces.demo.showcase.common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jstl-impl</artifactId>
		</dependency>
	</dependencies>

</project>
